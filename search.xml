<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SqlServer除数为零处理方法]]></title>
    <url>%2F2018%2F06%2F26%2FSqlServerChushuZero%2F</url>
    <content type="text"><![CDATA[今天在做一个统计的时候出现除数为零的情况，几分钟处理好后在此记录下来 一、第一种处理方式Sum(case when 字段 !=0 then 继续算 else 结束赋一个默认值) 参考资料更多 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#x41;&#98;&#x65;&#x6c;&#x5f;&#x6a;&#x69;&#101;&#64;&#111;&#117;&#x74;&#x6c;&#x6f;&#111;&#107;&#46;&#x63;&#111;&#109;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库日期常见使用方法]]></title>
    <url>%2F2018%2F06%2F26%2FdatabaseCompareDatetime%2F</url>
    <content type="text"><![CDATA[数据库操作中,通常需要选择某日期以后的记录，此时用SQL语句编写时，不能直接用“&gt;、&lt;、=”来选择。 一、Sqlserver datetime转字符串处理1234&gt;convert(varchar(10),您数据库的日期,120)&gt;&apos;2010-09-20&apos;``` ### 二、Orcle to_date日期比较和to_char()格式转换 where addtime &gt;= to_date(‘2009-1-1’ ,’YYYY-MM-DD’) and addtime &lt; to_date(‘2011-1-1’ ,’YYYY-MM-DD’)原来格式：2018/04/28 11:22:33to_char(字段,’yyyy-mm-dd hh24:mi:ss’)12 ### 三、查询10天内的数据 select * from tablename where addtime&gt;= (sysdate -10);1### 四、查询1小时内的数据 select * from tablename where addtime&gt;= (sysdate -1/24);``` 参考资料更多 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#98;&#101;&#x6c;&#95;&#106;&#x69;&#101;&#x40;&#111;&#x75;&#x74;&#x6c;&#x6f;&#111;&#107;&#46;&#x63;&#111;&#109;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SqlServer翻页存储过程]]></title>
    <url>%2F2018%2F06%2F20%2FSqlserverGetPageProdure%2F</url>
    <content type="text"><![CDATA[向SQLServer数据库分页存储过程 一、翻页存储过程 Create PROCEDURE [dbo].[a_Get_Base_TestInfo_temp_page] @ProcessID INT --工艺编号 (-1为不作限制) ,@ProductID INT --产品编号 (-1为不作限制) ,@StationName NVARCHAR(100) --工位名称 ,@StationContent NVARCHAR(100) --工位描述 ,@Enable NVARCHAR(100) --是否启用（0:&quot;NOK&quot;;1:&quot;OK&quot;） ,@StartTime NVARCHAR(50) --开始时间 ,@EndTime NVARCHAR(50) --结束时间 ,@PageIndex INT --当前页码 ,@PageSize INT --分页大小（每页条数） ,@RowCount INT OUTPUT AS --P1.定义临时表，用于存储过滤后的数据 create table #tmpInfo ([ID] [int] -- [ProcessID] [int], --[ProductID] [int], --[UpdateTime] [datetime] ); --P2.把过滤后的数据存储到临时表（select * into #table from table where field=&apos;&apos; ） declare @sql NVARCHAR(MAX) ; set @sql =&apos;INSERT INTO #tmpInfo SELECT b.ID FROM Data.TestInfo AS b WITH (NOLOCK) WHERE 1=1 &apos; IF(@ProcessID&gt;0) begin set @sql= @sql+&apos; AND b.[ProcessID]= &apos;&apos;&apos;+cast(@ProcessID AS VARCHAR(20))+&apos;&apos;&apos;&apos; end IF(@ProductID&gt;0) begin set @sql= @sql+&apos; AND b.[ProductID]= &apos;&apos;&apos;+cast(@ProductID AS VARCHAR(20))+&apos;&apos;&apos;&apos; end IF(LEN(@StationName)&gt;0) begin set @sql= @sql+&apos; AND b.[StationName]= &apos;&apos;&apos;+@StationName+&apos;&apos;&apos;&apos; end IF(LEN(@Enable)&gt;0) begin set @sql= @sql+&apos; AND b.[Enable]= &apos;&apos;&apos;+@Enable+&apos;&apos;&apos;&apos; end IF(LEN(@StartTime)&gt;0) begin set @sql= @sql+&apos; AND b.[UpdateTime]&gt;= &apos;&apos;&apos;+@StartTime+&apos;&apos;&apos;&apos; end IF(LEN(@EndTime)&gt;0) begin set @sql= @sql+&apos; AND b.[UpdateTime]&lt;= &apos;&apos;&apos;+@EndTime+&apos;&apos;&apos;&apos; end EXEC sp_executesql @sql; --P3.获得活动总纪录数 SELECT @RowCount= COUNT(1) FROM #tmpInfo; --P4.数据分页 SELECT g.ID ,b.ProcessID ,b.ProductID ,b.StationName --,b.StationID ,b.StationContent ,b.UpdateTime ,b.[Enable] FROM ( SELECT fp.* ,ROW_NUMBER() OVER (ORDER BY fp.ID DESC) AS RowIndex FROM #tmpInfo AS fp ) g INNER JOIN Data.TestInfo AS b WITH (NOLOCK) ON b.ID = g.ID WHERE g.RowIndex &gt; ((@PageIndex-1)*@PageSize) AND g.RowIndex &lt;=( @PageIndex*@PageSize); --清空临时表数据 （注释：表数据比较大，先清空在删除速度比较快） truncate table #tmpInfo; --删除临时表数据 drop table #tmpInfo; 二、调用存储过程 exec a_Get_Base_TestInfo_temp_page-1,-1,‘’,‘’,‘NOK’,‘2015-06-25 09:12’,‘2017-06-29 09:12:00’,2,10,null 参考资料更多 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#x41;&#98;&#101;&#108;&#x5f;&#x6a;&#x69;&#x65;&#64;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#x63;&#111;&#109;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SqlServer往表插入N条测试数据]]></title>
    <url>%2F2018%2F06%2F20%2FSqlserverInsertData%2F</url>
    <content type="text"><![CDATA[向SQLServer数据库表中插入N条测试数据 一、最近要做一个数据压力测试,就自己写了一个DECLARE @i INT SET @i=1 WHILE @i&lt;100 BEGIN INSERT INTO WX_ERRORLOG ( ID, ERRORCODE , MGS, ERRORTIME ) VALUES ( @i ,@i ,0 ,GETDATE()) SET @i=@i+1 END 二、当 IDENTITY_INSERT 设置为 OFF 时，不能为表中的标识列插入显式值 set identity_insert TableA ON–开启 set identity_insert TableA OFF–关闭 修改持久化类配置,id中Generator子节点设置Class属性为:assigned自动增长 修改为 class=&quot;native&quot; 参考资料更多 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#x62;&#101;&#x6c;&#x5f;&#106;&#x69;&#101;&#x40;&#x6f;&#117;&#x74;&#108;&#x6f;&#x6f;&#107;&#46;&#99;&#111;&#x6d;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谨以此纪念100天]]></title>
    <url>%2F2018%2F02%2F14%2FlifePicture%2F</url>
    <content type="text"><![CDATA[2018-02-15幸福开启时 前世多少次插肩才换来今生这次相遇。 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#98;&#x65;&#108;&#95;&#x6a;&#x69;&#101;&#64;&#x6f;&#x75;&#x74;&#x6c;&#x6f;&#111;&#x6b;&#46;&#99;&#111;&#x6d;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>love</category>
      </categories>
      <tags>
        <tag>love</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PythonSendMail]]></title>
    <url>%2F2018%2F01%2F25%2FPythonSendMail%2F</url>
    <content type="text"><![CDATA[Python对SMTP支持有smtplib和email两个模块，email负责构造邮件，smtplib负责发送邮件。 一、普通邮件 1234567891011121314151617181920212223#coding=utf-8import smtplibfrom email.mime.text import MIMETextmsg_from=&apos;670889455@qq.com&apos;passwd=&apos;kazmaubhezxzbeig&apos;msg_to=&apos;291848721@qq.com&apos;subject= &quot;测试Python发送邮件&quot;content = &quot;尽管那么懒的打理自己,但是还是那么美&quot;msg = MIMEText(content)msg[&apos;Subject&apos;] = subjectmsg[&apos;From&apos;] = msg_frommsg[&apos;To&apos;] = msg_totry: s = smtplib.SMTP_SSL(&quot;smtp.qq.com&quot;,465) s.login(msg_from, passwd) s.sendmail(msg_from, msg_to, msg.as_string()) print &quot;scuuess&quot;except s.SMTPException,e: print &quot;false&quot;finally: s.quit() 二、发送Html邮件三、带附件的邮件 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#x41;&#98;&#x65;&#108;&#x5f;&#x6a;&#x69;&#x65;&#x40;&#111;&#117;&#x74;&#108;&#111;&#111;&#x6b;&#46;&#x63;&#111;&#109;或者是在下方留言，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[运用PIL库生成图片验证码]]></title>
    <url>%2F2018%2F01%2F15%2FPythonPil%2F</url>
    <content type="text"><![CDATA[运用PIL库生成图片验证码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# coding=utf-8import randomfrom PIL import Image,ImageDraw,ImageFont,ImageFilter#Image 处理图片#ImageDraw 处理画笔#ImageFont 处理字体#ImageFilter 处理滤镜#1、创建图片大小img = Image.new(&quot;RGB&quot;,(150,50),(255,255,255))#2、创建画笔draw = ImageDraw.Draw(img)#3、 绘制线for i in range(random.randint(1,10)): draw.line( [ (random.randint(1,150),random.randint(1,150)), (random.randint(1, 150),random.randint(1,150)), (random.randint(1, 150), random.randint(1, 150)), (random.randint(1, 150), random.randint(1, 150)), (random.randint(1, 150), random.randint(1, 150)) ], fill = (0,0,0) )#4、绘制点 for i in range(100): draw.point( [ (random.randint(1, 150), random.randint(1, 150)), (random.randint(1, 150), random.randint(1, 150)) ], fill=(0, 0, 0) )img.show()#5、绘制字母font_list=list(&quot;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890&quot;)c_char= &quot;&quot;.join(random.sample(font_list,5)) #.sample在制定列表中选择选出指定个元素 #绘制字体font = ImageFont.truetype(&quot;simsun.ttc&quot;,26)draw.text((5,5),c_char,font=font,fill=&quot;green&quot;)&quot;&quot;&quot;位置字符字体颜色&quot;&quot;&quot;#6、定义扭曲的参数params = [ 1 - float(random.randint(1,2))/100, 0, 0, 0, 1 - float(random.randint(1,2))/100, float(random.randint(1,2))/500, 0.001, float(random.randint(1,1))/500,]#7、滤镜 #1、添加滤镜img = img.transform((150,50),Image.PERSPECTIVE,params)&quot;&quot;&quot;范围样式参数&quot;&quot;&quot; # 2、进行扭曲img = img.filter(ImageFilter.EDGE_ENHANCE_MORE)img.show() 参考文献:点击一下寻找更多 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#x41;&#98;&#x65;&#108;&#95;&#x6a;&#x69;&#x65;&#64;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#99;&#x6f;&#109;或者是在下方留言，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python字符串处理方法]]></title>
    <url>%2F2018%2F01%2F10%2FPythonStrMethod%2F</url>
    <content type="text"><![CDATA[Python 字符串方法 一、str.capitalize()返回字符串副本，第一个大写，其余小写 二、str.center(width[, fillchar])返回指定长度字符串，不够用第二个参数补充 三、str.count(sub[,star][,end])返回在star和end之间sub出现的非重叠次数(star和end都是用切片法解释) 四、str.endswith(suffix[, start[, end]])返回在star和end之间是否以suffix结尾，是为true，否为false,suffix可以是一个元组 五、str.expandtabs([tabsize])返回一个字符串的所有副本，其中所有制表符由一个或者多个制表符替换 六、str.find(sub[, start[, end]])返回在字符串中找到的子字符串sub的最低索引,未找到返回-1 不知道子字符串是否在不在字符串中可以用 in 七、str.format(args, *kwargs)返回 八、str.index(sub[, start[, end]])返回未找到子字符串时引发ValueError 九、str.isalnum()返回True或False 检测字符串是否由字母和数字组成 十、str.isalpha()返回True或False 检测字符串是否只由字母或汉字组成 十一、str.islower()返回True或False 检测字符串是否由小写字母组成 十二、str.isdigit()返回True或False 检测字符串是否只由数字组成 十三、str.isspace()如果有只有空白字符在字符串中，否则还有虚假的至少一个字符，则返回 true 十四、str.istitle()如果字符串是标题类型的字符串且至少包含一个字符，则返回 true。例如：大写字符可能只能跟着非标题类（数字、符号和转义字符）的字符和小写字符。 否则返回 false 十五、str.isupper()如果所有大小写敏感的字符[4]在字符串中都大写，并且嵌套中的至少一个字符，则返回 true；否则返回false 十六、str.ljust(width[, fillchar])返回字符串的长度宽度中左对齐一个字符串。做了填充使用指定的fillchar （默认为一个空格）。如果width小于或等于len(s)则返回原始字符串 十七、str.join(iterable)返回一个字符串，为iterable可迭代对象中字符串的连接。元素之间的分隔符是提供该方法的字符串 十八、str.lower()返回转换为小写字符串 十九、str.lstrip([chars])返回删除前导字符的字符串的副本。Chars参数是一个字符串，指定要移除的字符集 二十、str.partition(sep)在分隔符首次出现位置拆分字符串，并返回包含分隔符之前部分、分隔符本身和分隔符之后部分的3元组 二十一、str.replace(old, new[, count])返回字符串的一个拷贝，其中所有的子串old通过new替换。如果指定了可选参数count，则只有前面的count个出现被替换 二十二、str.rfind(sub[, start[, end]])返回被搜索子串最后一次出现在字符串的索引位置, 字符串被搜索范围为[start:end]可选参数，开始和结束都是解释为以切片表示法。失败返回-1 二十三、str.zfill(width)在数值字符串左边填充零至Width长度,当长度小于或等于返回原字符串 二十四、str.upper()返回字符串大写 二十五、str.translate(table[, deletechars])返回字符串的一个拷贝，其中出现在可选参数deletechars中的所有字符被删除 对于字符串对象，如果转换只是删除字符，可以设置table参数为None 二十六、str.title()返回单词首字母大写(将连续的一组字母看成一个单词) 二十七、str.swapcase()返回字符串的拷贝,大写转成小写,小写转成大写 二十八、str.strip([chars])返回字符串的一个副本，删除前导和尾随字符。chars参数是一个字符串，指定要移除的字符集。chars是删除其值的所有组合 二十九、str.split([sep[, maxsplit]])不带参数以空格切割成列表 三十、str.rstrip([chars])返回一个移去尾部字符后的字符串的拷贝 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#x62;&#x65;&#x6c;&#x5f;&#x6a;&#105;&#101;&#x40;&#x6f;&#x75;&#116;&#108;&#111;&#111;&#107;&#x2e;&#x63;&#111;&#x6d;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跟我一起学Python(基于2.7)]]></title>
    <url>%2F2017%2F11%2F10%2FPythonCut%2F</url>
    <content type="text"><![CDATA[Python 简单入门 一、注意事项支持中文# -*- coding: UTF-8 -*- 空格！空格！空格！ 二、切片1.取list前三个元素12L=[&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;]L[:3] 2.取list中隔2个位置的数 12L=[&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;]L[::2] 3. 三、判断是否能够迭代需要用到python内置模块 12from collections import Iterableisinstance(&apos;abc&apos;,Iterable) 更多资料 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#98;&#x65;&#x6c;&#x5f;&#106;&#x69;&#x65;&#64;&#111;&#x75;&#116;&#x6c;&#111;&#x6f;&#107;&#46;&#99;&#111;&#x6d;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用的正则表达式]]></title>
    <url>%2F2017%2F10%2F25%2FReg%2F</url>
    <content type="text"><![CDATA[收录常用的正则表达式 一、验证用户名和密码（&quot;^[a-zA-Z]\w{5,15}$&quot;） 二、验证电话号码（&quot;^(\d{3,4}-)\d{7,8}$&quot;） 三、验证手机号码(&quot;^1[3|4|5|7|8][0-9]{9}$&quot;) 四、验证身份证号（15位或18位数字）(&quot;\d{14}[[0-9],0-9xX]&quot;) 五、验证Email地址(&quot;^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$&quot;) 六、只能输入由数字和26个英文字母组成的字符串(&quot;^[A-Za-z0-9]+$&quot;) 七、整数或者小数(&quot;^[0-9]+([.][0-9]+){0,1}$&quot;) 八、只能输入数字(&quot;^[0-9]*$&quot;) 九、验证URL(&quot;^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$&quot;) 十、只能输入汉字(&quot;^[\u4e00-\u9fa5]{0,}$&quot;) 十一、匹配腾讯QQ号(&quot;[1-9][0-9]{4,}&quot;) 十二、匹配中国邮编(&quot;[1-9]\\d{5}(?!\d)&quot;) 参考资料更多常用正则表达式 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#x62;&#x65;&#x6c;&#95;&#106;&#x69;&#101;&#x40;&#111;&#x75;&#x74;&#108;&#x6f;&#111;&#107;&#46;&#x63;&#x6f;&#109;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python连接Mysql]]></title>
    <url>%2F2017%2F10%2F25%2FPythonUnionMysql%2F</url>
    <content type="text"><![CDATA[Python连接Mysql 一、本地安装Mysql数据库。二、http://pan.baidu.com/s/1eRRxWf4 安装mysqlDB 64位API三、测试是否安装成功 四、示例代码1234567891011121314import MySQLdb try: conn = MySQLdb.connect(host=&apos;localhost&apos;,user=&apos;root&apos;,passwd=&apos;gaopeng&apos;,db=&apos;test&apos;,port=3306) cur = conn.cursor() cur.execute(&quot;SELECT VERSION()&quot;) data = cur.fetchone() print &quot;Database version : %s&quot; % data except MySQLdb.Error,e: print &quot;Mysql Error %d: %s&quot; %(e.args[0], e.args[1]) finally: if conn: conn.close() 参考资料 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#65;&#x62;&#101;&#108;&#95;&#x6a;&#105;&#101;&#64;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#99;&#111;&#109;，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初识Markdown]]></title>
    <url>%2F2017%2F10%2F25%2FMarkdown%2F</url>
    <content type="text"><![CDATA[Markdown常用的标签。 一、标题# 一级标题 ###### 六级标题 二、有序列表和无序列表1. 1 * 1 - 1 2. 2 * 2 - 2 3. 3 * 3 - 3 三、引用&gt; &gt;&gt; &gt;&gt;&gt; 四、插入图片(alt指找不到图片所展示的内容，http指图片地址（图片地址必须是一个图床），title指竖表悬停展示的文字和图片下方的文字)语法:![alt](http &quot;title&quot;) 例子:![飞到火星去了...](http://img16.3lian.com/gif2016/q2/5/69.jpg &quot;向日葵&quot;) 五、插入链接(链接地址必须加http://前缀)语法:[文字描述](链接) 例子:[跳到百度](Https://www.baidu.com) 跳到百度 六、粗体与斜体删除线**粗体** *斜体* ~~删除线 例子：**这是粗体** *这是斜体* ~~删除线~~ 七、表格(：在右表示右对齐)|id|cost|pay| |---|---:|---:| |100|100.1|100.2| id cost pay 100 100.1 100.2 八、行内代码(` `) 这是行内public 九、代码块(``` ```)public private 十、分割线(***或&lt; h r&gt;) 十一、自动链接模式：&lt;&gt; 例子：&lt;Abel_jie@outlook.com&gt; &#65;&#98;&#x65;&#x6c;&#x5f;&#x6a;&#x69;&#101;&#x40;&#111;&#117;&#x74;&#108;&#111;&#x6f;&#107;&#46;&#99;&#x6f;&#109; 十二、描点调用语法：[你好](#jump) 描点位置：&lt;span id = &quot;jump&quot;&gt;hehe&lt;/span&gt; 你好 十三、引用代码块里引用其他markdown语法&gt;这是一段代码 &gt; &gt; return null 这是一段代码 return null 十四、注脚这是一个注脚测试[^footer1]。 [^footer1]: 这是一个测试，用来阐释注脚。 十五、定义型列表(Markdown Extra)Markdown : markdown是一款轻量级的文本语言。 参考文献:Markdown官文中译版 扫码关注，共同进步个人博客: http://www.xiaojie87.com 本文欢迎转载，但是希望注明出处并给出原文链接。如果你有任何疑问，欢迎在下方评论区留言，我会尽快答复。如果你喜欢或者不喜欢这篇文章，欢迎你发邮件到&#x41;&#98;&#x65;&#x6c;&#95;&#x6a;&#x69;&#101;&#64;&#111;&#117;&#116;&#x6c;&#111;&#111;&#107;&#46;&#99;&#111;&#109;或者是在下方留言，告诉我您的想法，您的建议对我非常重要。]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
